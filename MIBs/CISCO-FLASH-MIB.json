{
  "imports": {
    "class": "imports",
    "CISCO-QOS-PIB-MIB": [
      "Percent"
    ],
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "ENTITY-MIB": [
      "PhysicalIndex"
    ],
    "HCNUM-TC": [
      "CounterBasedGauge64"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddress",
      "InetAddressType"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "Counter32",
      "TimeTicks",
      "iso",
      "IpAddress",
      "Counter64",
      "OBJECT-IDENTITY",
      "OBJECT-TYPE",
      "Integer32",
      "Gauge32",
      "MibIdentifier",
      "NOTIFICATION-TYPE",
      "Bits",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "TimeStamp",
      "InstancePointer",
      "DateAndTime",
      "RowStatus",
      "TruthValue"
    ]
  },
  "ciscoFlashMIB": {
    "name": "ciscoFlashMIB",
    "oid": "1.3.6.1.4.1.9.9.10",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2018-08-14 00:00",
        "description": "This MIB provides for the management of Cisco\n        Flash Devices."
      },
      {
        "revision": "2013-08-06 00:00",
        "description": "Added new notification ciscoFlashPartitionLowSpaceNotif.\n        Added new notification ciscoFlashPartitionLowSpaceRecoveryNotif.\n        Added new object ciscoFlashPartitionLowSpaceNotifEnable.\n        Added new object ciscoFlashPartitionLowSpaceNotifThreshold.\n        Added new object group ciscoFlashPartitionInfoGroupRev1.\n        Added new notification group ciscoFlashNotifGroupRev3.\n        Added new compliance group ciscoFlashMIBComplianceRev11 which\n        deprecates ciscoFlashMIBComplianceRev10."
      },
      {
        "revision": "2011-03-16 00:00",
        "description": "Added ciscoFlashDeviceMinPartitionSizeExtended to support flash\n        devices of sizes greater than 4 GB.\n\n        Added new object group ciscoFlashDeviceInfoExtGroupSupRev1.\n\n        Added new compliance group ciscoFlashMIBComplianceRev10 which\n        deprecates ciscoFlashMIBComplianceRev9."
      },
      {
        "revision": "2009-06-03 00:00",
        "description": "Added 'copyProhibited' enum value to ciscoFlashCopyStatus object."
      },
      {
        "revision": "2008-12-08 00:00",
        "description": "Added ciscoFlashDeviceSizeExtended,\n        ciscoFlashPartitionFreeSpaceExtended and\n        ciscoFlashPartitionSizeExtended to support flash devices\n        of sizes greater than 4 GB."
      },
      {
        "revision": "2007-03-21 00:00",
        "description": "Added ciscoFlashFileTypeTable."
      },
      {
        "revision": "2006-11-08 00:00",
        "description": "DISPLAY-HINT for CheckSumString TEXTUAL CONVENTION\n        is changed from 'x' to '1x'."
      },
      {
        "revision": "2005-06-01 00:00",
        "description": "Added ciscoFlashFileDate to ciscoFlashFileTable\n\n        Added ciscoFlashCopyRemotePassword to\n                  ciscoFlashCopyTable.\n\n        Added following enumerations to\n        ciscoFlashCopyProtocol -\n         ftp, scp, sftp."
      },
      {
        "revision": "2005-01-28 00:00",
        "description": "Added a new status copyOperationPending(0)\n        to object ciscoFlashCopyStatus."
      },
      {
        "revision": "2004-03-18 00:00",
        "description": "The object ciscoFlashCopyServerAddress is\n        deprecated since it supports only IPv4 address. Two\n        new objects ciscoFlashCopyServerAddrRev1\n        ciscoFlashCopyServerAddrType are defined."
      },
      {
        "revision": "2003-04-23 00:00",
        "description": "Added ciscoFlashDeviceNameExtended to support upto\n        255 characters in flash device name.\n        Deprecated ciscoFlashDeviceName."
      },
      {
        "revision": "2003-01-31 12:34",
        "description": "Add ciscoFlashCopyVerify object to\n        CiscoFlashCopyEntry, & ciscoFlashCopyOpGroup.\n        Fix scalability problem for the following tables and\n        MIB objects: ciscoFlashDevicesSupported,\n        ciscoFlashDeviceTable, ciscoFlashPhyEntIndex (added),\n        ciscoFlashPartitionTable and ciscoFlashFileTable."
      },
      {
        "revision": "2002-04-01 00:00",
        "description": "Added Notifications ciscoFlashDeviceInsertedNotif\n        and ciscoFlashDeviceRemovedNotif. Deprecated the\n        ciscoFlashDeviceChangeTrap.\n        Added Scalars ciscoFlashCfgDevInsNotifEnable and\n        ciscoFlashCfgDevRemNotifEnable to control the above\n        notifications."
      },
      {
        "revision": "2002-01-25 00:00",
        "description": "Added object ciscoFlashFileType to\n        ciscoFlashFileTable and\n        added FlashFileType as a TEXTUAL-CONVENTION."
      },
      {
        "revision": "2002-01-22 00:00",
        "description": "Fixing several problems with the previous\n        version of the MIB:\n         o Changing MAX-ACCESS of ciscoFlashDeviceIndex\n           back to 'not-accessible'.  The change described\n           below in REVISION '200102211234Z' was not legal.\n         o Changing the definition of the\n           ciscoFlashDeviceChangeTrap notification.\n           The original definition of this notification include\n           a 'not-accessible' object (ciscoFlashDeviceIndex).\n           It will instead include the following objects:\n              ciscoFlashDeviceMinPartitionSize\n              ciscoFlashDeviceName\n           Instances of these object will carry the value of\n           ciscoFlashDeviceIndex implicitly in their object\n           identifiers.  This change is being made without\n           deprecation of the notification and has the\n           potential to cause problems with existing\n           implementations of the notification on the agent\n           and the manager.\n         o Past versions of the MIB have had a incorrectly\n           formatted REVISION/DESCRIPTION section.  That will\n           be corrected in this REVISION.\n         o Past versions of the MIB have not defined a\n           NOTIFICATION-GROUP for the notifications defined\n           by this MIB.  That will be corrected in this\n           REVISION by adding ciscoFlashNotifGroup.  This\n           group will be considered optional for\n           implementation.\n         o Gratuitous ranges specified in Entry definitions\n           have been removed."
      },
      {
        "revision": "2001-02-21 12:34",
        "description": "Change MAX-ACCESS of CiscoFlashDeviceIndex\n        from not-accessible to accessible-to-notfiy"
      },
      {
        "revision": "1998-08-27 00:00",
        "description": "Change ciscoFlashChipCode to match implementation,\n        and remove FlashChipCode as a TEXTUAL-CONVENTION."
      },
      {
        "revision": "1996-04-17 00:00",
        "description": "Add enumerations to objects in ciscoFlashMiscOpTable\n        to support formatting of flash devices."
      },
      {
        "revision": "1995-10-18 00:00",
        "description": "Add enumerations to a couple objects, and clarify\n        several object DESCRIPTIONs."
      },
      {
        "revision": "1995-08-15 00:00",
        "description": "Specify a correct (non-negative) range for several\n        index objects."
      },
      {
        "revision": "1995-04-29 00:00",
        "description": "Miscellaneous updates, including updated description of\n        ciscoFlashDeviceCard object."
      },
      {
        "revision": "1995-01-13 00:00",
        "description": "Initial version of Flash operations MIB module."
      }
    ],
    "lastupdated": "201308060000Z",
    "organization": "Cisco Systems, Inc.",
    "contactinfo": "Cisco Systems\n            Customer Service\n\n            Postal: 170 W. Tasman Drive\n            San Jose, CA  95134\n            USA\n\n            Tel: +1 800 553-NETS\n\n            E-mail: cs-snmp@cisco.com",
    "description": "Added new object ciscoFlashDeviceChangeExtTrap\n        Added new object ciscoFlashDeviceInsertedExtNotif\n        Added new object ciscoFlashDeviceRemovedExtNotif\n        to support flash devices of sizes greater than 4 GB"
  },
  "ChecksumString": {
    "name": "ChecksumString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "status": "current",
    "description": "Represents the checksum of a file."
  },
  "FlashFileType": {
    "name": "FlashFileType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "config": 2,
          "image": 3,
          "directory": 4,
          "crashinfo": 5
        }
      }
    },
    "status": "current",
    "description": "File types for files in a flash.\n\n        unknown        - file type is not one of the following.\n        config         - configuration file like\n                         startup configuration or\n                         running configuration.\n        image          - image file.\n        directory      - directory entry.\n        crashinfo      - file containing crashinfo."
  },
  "ciscoFlashMIBObjects": {
    "name": "ciscoFlashMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.10.1",
    "class": "objectidentity"
  },
  "ciscoFlashDevice": {
    "name": "ciscoFlashDevice",
    "oid": "1.3.6.1.4.1.9.9.10.1.1",
    "class": "objectidentity"
  },
  "ciscoFlashOps": {
    "name": "ciscoFlashOps",
    "oid": "1.3.6.1.4.1.9.9.10.1.2",
    "class": "objectidentity"
  },
  "ciscoFlashMIBTrapPrefix": {
    "name": "ciscoFlashMIBTrapPrefix",
    "oid": "1.3.6.1.4.1.9.9.10.1.3",
    "class": "objectidentity"
  },
  "ciscoFlashCfg": {
    "name": "ciscoFlashCfg",
    "oid": "1.3.6.1.4.1.9.9.10.1.4",
    "class": "objectidentity"
  },
  "ciscoFlashDevicesSupported": {
    "name": "ciscoFlashDevicesSupported",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of Flash devices supported by the system.\n        If the system does not support any Flash devices, this\n        MIB will not be loaded on that system. The value of this\n        object will therefore be atleast 1."
  },
  "ciscoFlashDeviceTable": {
    "name": "ciscoFlashDeviceTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of Flash device properties for each initialized\n        Flash device. Each Flash device installed in a system\n        is detected, sized, and initialized when the system\n        image boots up.\n        For removable Flash devices, the device properties\n        will be dynamically deleted and recreated as the\n        device is removed and inserted. Note that in this\n        case, the newly inserted device may not be the same as\n        the earlier removed one. The ciscoFlashDeviceInitTime\n        object is available for a management station to determine\n        the time at which a device was initialized, and thereby\n        detect the change of a removable device.\n        A removable device that has not been installed will\n        also have an entry in this table. This is to let a\n        management station know about a removable device that\n        has been removed. Since a removed device obviously\n        cannot be sized and initialized, the table entry for\n        such a device will have\n        ciscoFlashDeviceSize equal to zero,\n        and the following objects will have\n        an indeterminate value:\n                ciscoFlashDeviceMinPartitionSize,\n                ciscoFlashDeviceMaxPartitions,\n                ciscoFlashDevicePartitions, and\n                ciscoFlashDeviceChipCount.\n        ciscoFlashDeviceRemovable will be\n        true to indicate it is removable."
  },
  "ciscoFlashDeviceEntry": {
    "name": "ciscoFlashDeviceEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of flash device properties for\n        each initialized flash device.\n        Each entry can be randomly accessed by using\n        ciscoFlashDeviceIndex as an index into the table.\n        Note that removable devices will have an entry in\n        the table even when they have been removed. However,\n        a non-removable device that has not been installed\n        will not have an entry in the table."
  },
  "ciscoFlashDeviceIndex": {
    "name": "ciscoFlashDeviceIndex",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Flash device sequence number to index within the\n        table of initialized flash devices.\n        The lowest value should be 1. The highest should be\n        less than or equal to the value of the\n        ciscoFlashDevicesSupported object."
  },
  "ciscoFlashDeviceSize": {
    "name": "ciscoFlashDeviceSize",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Total size of the Flash device.\n        For a removable device, the size will be zero if\n        the device has been removed.\n\n        If the total size of the flash device is greater than the\n        maximum value reportable by this object then this object\n        should report its maximum value(4,294,967,295) and\n        ciscoFlashDeviceSizeExtended must be used to report the\n        flash device's size."
  },
  "ciscoFlashDeviceMinPartitionSize": {
    "name": "ciscoFlashDeviceMinPartitionSize",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object will give the minimum partition size\n        supported for this device. For systems that execute code\n        directly out of Flash, the minimum partition size needs\n        to be the bank size. (Bank size is equal to the size of a\n        chip multiplied by the width of the device. In most cases,\n        the device width is 4 bytes, and so the bank size would be\n        four times the size of a chip). This has to be so because\n        all programming commands affect the operation of an\n        entire chip (in our case, an entire bank because all\n        operations are done on the entire width of the device)\n        even though the actual command may be localized to a small\n        portion of each chip. So when executing code out of Flash,\n        one needs to be able to write and erase some portion of\n        Flash without affecting the code execution.\n        For systems that execute code out of DRAM or ROM, it is\n        possible to partition Flash with a finer granularity (for\n        eg., at erase sector boundaries) if the system code supports\n        such granularity.\n\n        This object will let a management entity know the\n        minimum partition size as defined by the system.\n        If the system does not support partitioning, the value\n        will be equal to the device size in ciscoFlashDeviceSize.\n        The maximum number of partitions that could be configured\n        will be equal to the minimum of\n        ciscoFlashDeviceMaxPartitions\n        and\n        (ciscoFlashDeviceSize / ciscoFlashDeviceMinPartitionSize).\n\n        If the total size of the flash device is greater than the\n        maximum value reportable by this object then this object should\n        report its maximum value(4,294,967,295) and\n        ciscoFlashDeviceMinPartitionSizeExtended must be used to report\n        the flash device's minimum partition size."
  },
  "ciscoFlashDeviceMaxPartitions": {
    "name": "ciscoFlashDeviceMaxPartitions",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Max number of partitions supported by the system for\n        this Flash device. Default will be 1, which actually\n        means that partitioning is not supported. Note that\n        this value will be defined by system limitations, not\n        by the flash device itself (for eg., the system may\n        impose a limit of 2 partitions even though the device\n        may be large enough to be partitioned into 4 based on\n        the smallest partition unit supported).\n        On systems that execute code out of Flash, partitioning\n        is a way of creating multiple file systems in the Flash\n        device so that writing into or erasing of one file system\n        can be done while executing code residing in another file\n        system.\n        For systems executing code out of DRAM, partitioning\n        gives a way of sub-dividing a large Flash device for\n        easier management of files."
  },
  "ciscoFlashDevicePartitions": {
    "name": "ciscoFlashDevicePartitions",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash device partitions actually present. Number of\n        partitions cannot exceed the minimum of\n        ciscoFlashDeviceMaxPartitions\n        and\n        (ciscoFlashDeviceSize / ciscoFlashDeviceMinPartitionSize).\n        Will be equal to at least 1, the case where the partition\n        spans the entire device (actually no partitioning).\n        A partition will contain one or more minimum partition\n        units (where a minimum partition unit is defined by\n        ciscoFlashDeviceMinPartitionSize)."
  },
  "ciscoFlashDeviceChipCount": {
    "name": "ciscoFlashDeviceChipCount",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Total number of chips within the Flash device.\n        The purpose of this object is to provide information\n        upfront to a management station on how much chip info\n        to expect and possibly help double check the chip index\n        against an upper limit when randomly retrieving chip\n        info for a partition."
  },
  "ciscoFlashDeviceName": {
    "name": "ciscoFlashDeviceName",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Flash device name. This name is used to refer to the\n        device within the system. Flash operations get directed\n        to a device based on this name.\n        The system has a concept of a default device.\n        This would be the primary or most used device in case of\n        multiple devices. The system directs an operation to the\n        default device whenever a device name is not specified.\n        The device name is therefore mandatory except when the\n        operation is being done on the default device, or,\n        the system supports only a single Flash device.\n        The device name will always be available for a\n        removable device, even when the device has been removed."
  },
  "ciscoFlashDeviceDescr": {
    "name": "ciscoFlashDeviceDescr",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Description of a Flash device. The description is meant\n        to explain what the Flash device and its purpose is.\n        Current values are:\n          System flash - for the primary Flash used to store full\n                         system images.\n          Boot flash   - for the secondary Flash used to store\n                         bootstrap images.\n        The ciscoFlashDeviceDescr, ciscoFlashDeviceController\n        (if applicable), and ciscoFlashPhyEntIndex objects are\n        expected to collectively give all information about a\n        Flash device.\n        The device description will always be available for a\n        removable device, even when the device has been removed."
  },
  "ciscoFlashDeviceController": {
    "name": "ciscoFlashDeviceController",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash device controller. The h/w card that actually\n        controls Flash read/write/erase. Relevant for the AGS+\n        systems where Flash may be controlled by the MC+, STR or\n        the ENVM cards, cards that may not actually contain the\n        Flash chips.\n        For systems that have removable PCMCIA flash cards that\n        are controlled by a PCMCIA controller chip, this object\n        may contain a description of that controller chip.\n        Where irrelevant (Flash is a direct memory mapped device\n        accessed directly by the main processor), this object will\n        have an empty (NULL) string."
  },
  "ciscoFlashDeviceCard": {
    "name": "ciscoFlashDeviceCard",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InstancePointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "This object will point to an instance of a card entry\n        in the cardTable. The card entry will give details about\n        the card on which the Flash device is actually located.\n        For most systems, this is usually the main processor board.\n        On the AGS+ systems, Flash is located on a separate multibus\n        card such as the MC.\n        This object will therefore be used to essentially index\n        into cardTable to retrieve details about the card such as\n        cardDescr, cardSlotNumber, etc."
  },
  "ciscoFlashDeviceProgrammingJumper": {
    "name": "ciscoFlashDeviceProgrammingJumper",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "installed": 1,
          "notInstalled": 2,
          "unknown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object gives the state of a jumper (if present and can be\n        determined) that controls the programming voltage called Vpp\n        to the Flash device. Vpp is required for programming (erasing\n        and writing) Flash. For certain older technology chips it is\n        also required for identifying the chips (which in turn is\n        required to identify which programming algorithms to use;\n        different chips require different algorithms and commands).\n        The purpose of the jumper, on systems where it is available,\n        is to write protect a Flash device.\n        On most of the newer remote access routers, this jumper is\n        unavailable since users are not expected to visit remote sites\n        just to install and remove the jumpers when upgrading software\n        in the Flash device. The unknown(3) value will be returned for\n        such systems and can be interpreted to mean that a programming\n        jumper is not present or not required on those systems.\n        On systems where the programming jumper state can be read back\n        via a hardware register, the installed(1) or notInstalled(2)\n        value will be returned.\n        This object is expected to be used in conjunction with the\n        ciscoFlashPartitionStatus object whenever that object has\n        the readOnly(1) value. In such a case, this object will\n        indicate whether the programming jumper is a possible reason\n        for the readOnly state."
  },
  "ciscoFlashDeviceInitTime": {
    "name": "ciscoFlashDeviceInitTime",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "System time at which device was initialized.\n        For fixed devices, this will be the system time at\n        boot up.\n        For removable devices, it will be the time at which\n        the device was inserted, which may be boot up time,\n        or a later time (if device was inserted later).\n        If a device (fixed or removable) was repartitioned,\n        it will be the time of repartitioning.\n        The purpose of this object is to help a management\n        station determine if a removable device has been\n        changed. The application should retrieve this\n        object prior to any operation and compare with\n        the previously retrieved value.\n        Note that this time will not be real time but a\n        running time maintained by the system. This running\n        time starts from zero when the system boots up.\n        For a removable device that has been removed, this\n        value will be zero."
  },
  "ciscoFlashDeviceRemovable": {
    "name": "ciscoFlashDeviceRemovable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whether Flash device is removable. Generally, only PCMCIA\n        Flash cards will be treated as removable. Socketed Flash\n        chips and Flash SIMM modules will not be treated as removable.\n        Simply put, only those Flash devices that can be inserted\n        or removed without opening the hardware casing will be\n        considered removable.\n        Further, removable Flash devices are expected to have\n        the necessary hardware support -\n          1. on-line removal and insertion\n          2. interrupt generation on removal or insertion."
  },
  "ciscoFlashPhyEntIndex": {
    "name": "ciscoFlashPhyEntIndex",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysicalIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the physical entity index of a\n        physical entity in entPhysicalTable which the flash\n        device actually located."
  },
  "ciscoFlashDeviceNameExtended": {
    "name": "ciscoFlashDeviceNameExtended",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Extended Flash device name whose size can be upto\n        255 characters. This name is used to refer to the\n        device within the system. Flash operations get directed\n        to a device based on this name.\n        The system has a concept of a default device.\n        This would be the primary or most used device in case\n        of multiple devices. The system directs an operation\n        to the default device whenever a device name is not\n        specified. The device name is therefore mandatory\n        except when the operation is being done on the\n        default device, or, the system supports only a single\n        Flash device. The device name will always be available\n        for a removable device, even when the device has been\n        removed."
  },
  "ciscoFlashDeviceSizeExtended": {
    "name": "ciscoFlashDeviceSizeExtended",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CounterBasedGauge64",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Total size of the Flash device.\n        For a removable device, the size will be zero if\n        the device has been removed.\n\n        This object is a 64-bit version of ciscoFlashDeviceSize."
  },
  "ciscoFlashDeviceMinPartitionSizeExtended": {
    "name": "ciscoFlashDeviceMinPartitionSizeExtended",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CounterBasedGauge64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object provides the minimum partition size supported for\n        this device. This object is a 64-bit version of \n        ciscoFlashDeviceMinPatitionSize."
  },
  "ciscoFlashChips": {
    "name": "ciscoFlashChips",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3",
    "class": "objectidentity"
  },
  "ciscoFlashChipTable": {
    "name": "ciscoFlashChipTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of Flash device chip properties for each\n        initialized Flash device.\n        This table is meant primarily for aiding error\n        diagnosis."
  },
  "ciscoFlashChipEntry": {
    "name": "ciscoFlashChipEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of chip info for each\n        flash device initialized in the system.\n        An entry is indexed by two objects - the\n        device index and the chip index within that\n        device."
  },
  "ciscoFlashChipIndex": {
    "name": "ciscoFlashChipIndex",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Chip sequence number within selected flash device.\n        Used to index within chip info table.\n        Value starts from 1 and should not be greater than\n        ciscoFlashDeviceChipCount for that device.\n        When retrieving chip information for chips within a\n        partition, the sequence number should lie between\n        ciscoFlashPartitionStartChip & ciscoFlashPartitionEndChip\n        (both inclusive)."
  },
  "ciscoFlashChipCode": {
    "name": "ciscoFlashChipCode",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Manufacturer and device code for a chip.\n        Lower byte will contain the device code.\n        Upper byte will contain the manufacturer code.\n        If a chip code is unknown because it could not\n        be queried out of the chip, the value of this\n        object will be 00:00.\n        Since programming algorithms differ from chip type to\n        chip type, this chip code should be used to determine\n        which algorithms to use (and thereby whether the chip\n        is supported in the first place)."
  },
  "ciscoFlashChipDescr": {
    "name": "ciscoFlashChipDescr",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash chip name corresponding to the chip code.\n        The name will contain the manufacturer and the\n        chip type. It will be of the form :\n          Intel 27F008SA.\n        In the case where a chip code is unknown, this\n        object will be an empty (NULL) string.\n        In the case where the chip code is known but the\n        chip is not supported by the system, this object\n        will be an empty (NULL) string.\n        A management station is therefore expected to use the\n        chip code and the chip description in conjunction\n        to provide additional information whenever the\n        ciscoFlashPartitionStatus object has the readOnly(1)\n        value."
  },
  "ciscoFlashChipWriteRetries": {
    "name": "ciscoFlashChipWriteRetries",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object will provide a cumulative count\n        (since last system boot up or initialization) of\n        the number of write retries that were done in the chip.\n        If no writes have been done to Flash, the count\n        will be zero. Typically, a maximum of 25 retries are\n        done on a single location before flagging a write\n        error.\n        A management station is expected to get this object\n        for each chip in a partition after a write failure\n        in that partition. To keep a track of retries for\n        a given write operation, the management station would\n        have to retrieve the values for the concerned chips\n        before and after any write operation."
  },
  "ciscoFlashChipEraseRetries": {
    "name": "ciscoFlashChipEraseRetries",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object will provide a cumulative count\n        (since last system boot up or initialization) of\n        the number of erase retries that were done in the chip.\n        Typically, a maximum of 2000 retries are done in a\n        single erase zone (which may be a full chip or a\n        portion, depending on the chip technology) before\n        flagging an erase error.\n        A management station is expected to get this object\n        for each chip in a partition after an erase failure\n        in that partition. To keep a track of retries for\n        a given erase operation, the management station would\n        have to retrieve the values for the concerned chips\n        before and after any erase operation.\n        Note that erase may be done through an independent\n        command, or through a copy-to-flash command."
  },
  "ciscoFlashChipMaxWriteRetries": {
    "name": "ciscoFlashChipMaxWriteRetries",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of write retries done at any\n        single location before declaring a write failure."
  },
  "ciscoFlashChipMaxEraseRetries": {
    "name": "ciscoFlashChipMaxEraseRetries",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of erase retries done within\n        an erase sector before declaring an erase failure."
  },
  "ciscoFlashPartitions": {
    "name": "ciscoFlashPartitions",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4",
    "class": "objectidentity"
  },
  "ciscoFlashPartitionTable": {
    "name": "ciscoFlashPartitionTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of flash device partition properties for each\n        initialized flash partition. Whenever there is no\n        explicit partitioning done, a single partition spanning\n        the entire device will be assumed to exist. There will\n        therefore always be atleast one partition on a device."
  },
  "ciscoFlashPartitionEntry": {
    "name": "ciscoFlashPartitionEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of flash partition properties\n        for each initialized flash partition. Each entry\n        will be indexed by a device number and a partition\n        number within the device."
  },
  "ciscoFlashPartitionIndex": {
    "name": "ciscoFlashPartitionIndex",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Flash partition sequence number used to index within\n        table of initialized flash partitions."
  },
  "ciscoFlashPartitionStartChip": {
    "name": "ciscoFlashPartitionStartChip",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Chip sequence number of first chip in partition.\n        Used as an index into the chip table."
  },
  "ciscoFlashPartitionEndChip": {
    "name": "ciscoFlashPartitionEndChip",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Chip sequence number of last chip in partition.\n        Used as an index into the chip table."
  },
  "ciscoFlashPartitionSize": {
    "name": "ciscoFlashPartitionSize",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash partition size. It should be an integral\n        multiple of ciscoFlashDeviceMinPartitionSize.\n        If there is a single partition, this size will be equal\n        to ciscoFlashDeviceSize.\n\n        If the size of the flash partition is greater than the\n        maximum value reportable by this object then this object\n        should report its maximum value(4,294,967,295) and\n        ciscoFlashPartitionSizeExtended must be used to report the\n        flash partition's size."
  },
  "ciscoFlashPartitionFreeSpace": {
    "name": "ciscoFlashPartitionFreeSpace",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Free space within a Flash partition.\n        Note that the actual size of a file in Flash includes\n        a small overhead that represents the file system's\n        file header.\n        Certain file systems may also have a partition or\n        device header overhead to be considered when\n        computing the free space.\n        Free space will be computed as total partition size\n        less size of all existing files (valid/invalid/deleted\n        files and including file header of each file),\n        less size of any partition header, less size of\n        header of next file to be copied in. In short, this\n        object will give the size of the largest file that\n        can be copied in. The management entity will not be\n        expected to know or use any overheads such as file\n        and partition header lengths, since such overheads\n        may vary from file system to file system.\n        Deleted files in Flash do not free up space.\n        A partition may have to be erased in order to reclaim\n        the space occupied by files.\n\n        If the free space within a flash partition is greater than\n        the maximum value reportable by this object then this object\n        should report its maximum value(4,294,967,295) and\n        ciscoFlashPartitionFreeSpaceExtended\n        must be used to report the flash partition's free space."
  },
  "ciscoFlashPartitionFileCount": {
    "name": "ciscoFlashPartitionFileCount",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Count of all files in a flash partition. Both\n        good and bad (deleted or invalid checksum) files\n        will be included in this count."
  },
  "ciscoFlashPartitionChecksumAlgorithm": {
    "name": "ciscoFlashPartitionChecksumAlgorithm",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "simpleChecksum": 1,
          "undefined": 2,
          "simpleCRC": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Checksum algorithm identifier for checksum method\n        used by the file system. Normally, this would be\n        fixed for a particular file system. When a file\n        system writes a file to Flash, it checksums the\n        data written. The checksum then serves as a way\n        to validate the data read back whenever the file\n        is opened for reading.\n        Since there is no way, when using TFTP, to guarantee\n        that a network download has been error free (since\n        UDP checksums may not have been enabled), this\n        object together with the ciscoFlashFileChecksum\n        object provides a method for any management station\n        to regenerate the checksum of the original file\n        on the server and compare checksums to ensure that\n        the file download to Flash was error free.\n        simpleChecksum represents a simple 1s complement\n        addition of short word values. Other algorithm\n        values will be added as necessary."
  },
  "ciscoFlashPartitionStatus": {
    "name": "ciscoFlashPartitionStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "readOnly": 1,
          "runFromFlash": 2,
          "readWrite": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash partition status can be :\n\n        * readOnly if device is not programmable either because\n        chips could not be recognized or an erroneous mismatch\n        of chips was detected. Chip recognition may fail either\n        because the chips are not supported by the system,\n        or because the Vpp voltage required to identify chips\n        has been disabled via the programming jumper.\n        The ciscoFlashDeviceProgrammingJumper, ciscoFlashChipCode,\n        and ciscoFlashChipDescr objects can be examined to get\n        more details on the cause of this status\n        * runFromFlash (RFF) if current image is running from\n        this partition.\n        The ciscoFlashPartitionUpgradeMethod object will then\n        indicate whether the Flash Load Helper can be used\n        to write a file to this partition or not.\n\n        * readWrite if partition is programmable."
  },
  "ciscoFlashPartitionUpgradeMethod": {
    "name": "ciscoFlashPartitionUpgradeMethod",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "rxbootFLH": 2,
          "direct": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash partition upgrade method, ie., method by which\n        new files can be downloaded into the partition.\n        FLH stands for Flash Load Helper, a feature provided\n        on run-from-Flash systems for upgrading Flash. This\n        feature uses the bootstrap code in ROMs to help in\n        automatic download.\n        This object should be retrieved if the partition\n        status is runFromFlash(2).\n        If the partition status is readOnly(1), the upgrade\n        method would depend on the reason for the readOnly\n        status. For eg., it may simply be a matter of installing\n        the programming jumper, or it may require execution of a\n        later version of software that supports the Flash chips.\n\n        unknown      -  the current system image does not know\n                        how Flash can be programmed. A possible\n                        method would be to reload the ROM image\n                        and perform the upgrade manually.\n        rxbootFLH    -  the Flash Load Helper is available to\n                        download files to Flash. A copy-to-flash\n                        command can be used and this system image\n                        will automatically reload the Rxboot image\n                        in ROM and direct it to carry out the\n                        download request.\n        direct       -  will be done directly by this image."
  },
  "ciscoFlashPartitionName": {
    "name": "ciscoFlashPartitionName",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash partition name used to refer to a partition\n        by the system. This can be any alpha-numeric character\n        string of the form AAAAAAAAnn, where A represents an\n        optional alpha character and n a numeric character.\n        Any numeric characters must always form the trailing\n        part of the string. The system will strip off the alpha\n        characters and use the numeric portion to map to a\n        partition index.\n        Flash operations get directed to a device partition\n        based on this name.\n        The system has a concept of a default partition. This\n        would be the first partition in the device. The system\n        directs an operation to the default partition whenever\n        a partition name is not specified.\n        The partition name is therefore mandatory except when\n        the operation is being done on the default partition, or\n        the device has just one partition (is not partitioned)."
  },
  "ciscoFlashPartitionNeedErasure": {
    "name": "ciscoFlashPartitionNeedErasure",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates whether a partition requires\n        erasure before any write operations can be done in it.\n        A management station should therefore retrieve this\n        object prior to attempting any write operation.\n        A partition requires erasure after it becomes full\n        free space left is less than or equal to the\n        (filesystem file header size).\n        A partition also requires erasure if the system does\n        not find the existence of any file system when it\n        boots up.\n        The partition may be erased explicitly through the\n        erase(5) command, or by using the copyToFlashWithErase(1)\n        command.\n        If a copyToFlashWithoutErase(2) command is issued\n        when this object has the TRUE value, the command\n        will fail."
  },
  "ciscoFlashPartitionFileNameLength": {
    "name": "ciscoFlashPartitionFileNameLength",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Maximum file name length supported by the file\n        system.\n        Max file name length will depend on the file\n        system implemented. Today, all file systems\n        support a max length of at least 48 bytes.\n        A management entity must use this object when\n        prompting a user for, or deriving the Flash file\n        name length."
  },
  "ciscoFlashPartitionSizeExtended": {
    "name": "ciscoFlashPartitionSizeExtended",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CounterBasedGauge64",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash partition size. It should be an integral\n        multiple of ciscoFlashDeviceMinPartitionSize.\n        If there is a single partition, this size will be equal\n        to ciscoFlashDeviceSize.\n\n        This object is a 64-bit version of ciscoFlashPartitionSize"
  },
  "ciscoFlashPartitionFreeSpaceExtended": {
    "name": "ciscoFlashPartitionFreeSpaceExtended",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CounterBasedGauge64",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Free space within a Flash partition.\n        Note that the actual size of a file in Flash includes\n        a small overhead that represents the file system's\n        file header.\n        Certain file systems may also have a partition or\n        device header overhead to be considered when\n        computing the free space.\n        Free space will be computed as total partition size\n        less size of all existing files (valid/invalid/deleted\n        files and including file header of each file),\n        less size of any partition header, less size of\n        header of next file to be copied in. In short, this\n        object will give the size of the largest file that\n        can be copied in. The management entity will not be\n        expected to know or use any overheads such as file\n        and partition header lengths, since such overheads\n        may vary from file system to file system.\n        Deleted files in Flash do not free up space.\n        A partition may have to be erased in order to reclaim\n        the space occupied by files.\n\n        This object is a 64-bit version of ciscoFlashPartitionFreeSpace"
  },
  "ciscoFlashPartitionLowSpaceNotifThreshold": {
    "name": "ciscoFlashPartitionLowSpaceNotifThreshold",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Percent",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object specifies the minimum threshold value in percentage\n        of free space for each partition. If the free space available\n        goes below this threshold value and if\n        ciscoFlashPartionLowSpaceNotifEnable is set to true,\n        ciscoFlashPartitionLowSpaceNotif will be generated. When the\n        available free space comes back to the threshold value\n        ciscoFlashPartionLowSpaceRecoveryNotif will be generated."
  },
  "ciscoFlashFiles": {
    "name": "ciscoFlashFiles",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2",
    "class": "objectidentity"
  },
  "ciscoFlashFileTable": {
    "name": "ciscoFlashFileTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of information for files in a Flash partition."
  },
  "ciscoFlashFileEntry": {
    "name": "ciscoFlashFileEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of Flash file properties\n        for each initialized Flash partition. Each entry\n        represents a file and gives details about the file.\n        An entry is indexed using the device number,\n        partition number within the device, and file\n        number within the partition."
  },
  "ciscoFlashFileIndex": {
    "name": "ciscoFlashFileIndex",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Flash file sequence number used to index within\n        a Flash partition directory table."
  },
  "ciscoFlashFileSize": {
    "name": "ciscoFlashFileSize",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Size of the file in bytes. Note that this size does\n        not include the size of the filesystem file header.\n        File size will always be non-zero."
  },
  "ciscoFlashFileChecksum": {
    "name": "ciscoFlashFileChecksum",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ChecksumString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "File checksum stored in the file header. This\n        checksum is computed and stored when the file is\n        written into Flash. It serves to validate the data\n        written into Flash.\n        Whereas the system will generate and store the checksum\n        internally in hexadecimal form, this object will\n        provide the checksum in a string form.\n        The checksum will be available for all valid and\n        invalid-checksum files."
  },
  "ciscoFlashFileStatus": {
    "name": "ciscoFlashFileStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "deleted": 1,
          "invalidChecksum": 2,
          "valid": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Status of a file.\n        A file could be explicitly deleted if the file system\n        supports such a user command facility. Alternately,\n        an existing good file would be automatically deleted\n        if another good file with the same name were copied in.\n        Note that deleted files continue to occupy prime\n        Flash real estate.\n\n        A file is marked as having an invalid checksum if any\n        checksum mismatch was detected while writing or reading\n        the file. Incomplete files (files truncated either\n        because of lack of free space, or a network download\n        failure) are also written with a bad checksum and\n        marked as invalid."
  },
  "ciscoFlashFileName": {
    "name": "ciscoFlashFileName",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flash file name as specified by the user copying in\n        the file. The name should not include the colon (:)\n        character as it is a special separator character used\n        to delineate the device name, partition name, and the\n        file name."
  },
  "ciscoFlashFileType": {
    "name": "ciscoFlashFileType",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FlashFileType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Type of the file."
  },
  "ciscoFlashFileDate": {
    "name": "ciscoFlashFileDate",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time at which this file was created."
  },
  "ciscoFlashFileByTypeTable": {
    "name": "ciscoFlashFileByTypeTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of information for files on the manageable\n        flash devices sorted by File Types."
  },
  "ciscoFlashFileByTypeEntry": {
    "name": "ciscoFlashFileByTypeEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileType",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionIndex",
        "implied": 0
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of Flash file properties\n        for each initialized Flash partition. Each entry\n        represents a file sorted by file type.\n\n        This table contains exactly the same set of rows\n        as are contained in the ciscoFlashFileTable but\n        in a different order, i.e., ordered by\n\n        the type of file, given by  ciscoFlashFileType;\n        the device number, given by ciscoFlashDeviceIndex;\n        the partition number within the device, given by\n        ciscoFlashPartitionIndex;\n        the file number within the partition, given by\n        ciscoFlashFileIndex."
  },
  "ciscoFlashFileByTypeSize": {
    "name": "ciscoFlashFileByTypeSize",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "bytes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object represents exactly the\n        same info as ciscoFlashFileSize\n        object in ciscoFlashFileTable."
  },
  "ciscoFlashFileByTypeChecksum": {
    "name": "ciscoFlashFileByTypeChecksum",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ChecksumString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object represents exactly the\n        same info as ciscoFlashFileChecksum\n        object in ciscoFlashFileTable."
  },
  "ciscoFlashFileByTypeStatus": {
    "name": "ciscoFlashFileByTypeStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "deleted": 1,
          "invalidChecksum": 2,
          "valid": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object represents exactly the\n        same info as ciscoFlashFileStatus\n        object in ciscoFlashFileTable."
  },
  "ciscoFlashFileByTypeName": {
    "name": "ciscoFlashFileByTypeName",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object represents exactly the\n        same info as ciscoFlashFileName\n        object in ciscoFlashFileTable."
  },
  "ciscoFlashFileByTypeDate": {
    "name": "ciscoFlashFileByTypeDate",
    "oid": "1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object represents exactly the\n        same info as ciscoFlashFileDate\n        object in ciscoFlashFileTable."
  },
  "ciscoFlashCopyTable": {
    "name": "ciscoFlashCopyTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of Flash copy operation entries. Each\n        entry represents a Flash copy operation (to or\n        from Flash) that has been initiated."
  },
  "ciscoFlashCopyEntry": {
    "name": "ciscoFlashCopyEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopySerialNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A Flash copy operation entry. Each entry consists\n        of a command, a source, and optional parameters such\n        as protocol to be used, a destination, a server address,\n        etc.\n\n        A management station wishing to create an entry should\n        first generate a pseudo-random serial number to be used\n        as the index to this sparse table.  The station should\n        then create the associated instance of the row status\n        object. It must also, either in the same or in successive\n        PDUs, create the associated instance of the command and\n        parameter objects. It should also modify the default values\n        for any of the parameter objects if the defaults are not\n        appropriate.\n\n        Once the appropriate instances of all the command\n        objects have been created, either by an explicit SNMP\n        set request or by default, the row status should be set\n        to active to initiate the operation. Note that this entire\n        procedure may be initiated via a single set request which\n        specifies a row status  of createAndGo as well as specifies\n        valid values for the non-defaulted parameter objects.\n\n        Once an operation has been activated, it cannot be\n        stopped.\n\n        Once the operation completes, the management station should\n        retrieve the value of the status object (and time if\n        desired), and delete the entry.  In order to prevent old\n        entries from clogging the table, entries will be aged out,\n        but an entry will never be deleted within 5 minutes of\n        completing."
  },
  "ciscoFlashCopySerialNumber": {
    "name": "ciscoFlashCopySerialNumber",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Object which specifies a unique entry in the\n        table. A management station wishing to initiate a\n        copy operation should use a pseudo-random value for\n        this object when creating or modifying an instance of\n        a ciscoFlashCopyEntry."
  },
  "ciscoFlashCopyCommand": {
    "name": "ciscoFlashCopyCommand",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "copyToFlashWithErase": 1,
          "copyToFlashWithoutErase": 2,
          "copyFromFlash": 3,
          "copyFromFlhLog": 4
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The copy command to be executed. Mandatory.\n        Note that it is possible for a system to support\n        multiple file systems (different file systems on\n        different Flash devices, or different file systems\n        on different partitions within a device). Each such\n        file system may support only a subset of these commands.\n        If a command is unsupported, the invalidOperation(3)\n        error will be reported in the operation status.\n\n        Command                 Remarks\n        copyToFlashWithErase    Copy a file to flash; erase\n                                flash before copy.\n                                Use the TFTP or rcp protocol.\n        copyToFlashWithoutErase Copy a file to flash; do not\n                                erase.\n                                Note that this command will fail\n                                if the PartitionNeedErasure\n                                object specifies that the\n                                partition being copied to needs\n                                erasure.\n                                Use the TFTP or rcp protocol.\n        copyFromFlash           Copy a file from flash using\n                                the TFTP, rcp or lex protocol.\n                                Note that the lex protocol\n                                can only be used to copy to a\n                                lex device.\n        copyFromFlhLog          Copy contents of FLH log to\n                                server using TFTP protocol.\n\n\n        Command table           Parameters\n        copyToFlashWithErase    CopyProtocol\n                                CopyServerAddress\n                                CopySourceName\n                                CopyDestinationName (opt)\n                                CopyRemoteUserName (opt)\n                                CopyNotifyOnCompletion (opt)\n        copyToFlashWithoutErase CopyProtocol\n                                CopyServerAddress\n                                CopySourceName\n                                CopyDestinationName (opt)\n                                CopyRemoteUserName (opt)\n                                CopyNotifyOnCompletion (opt)\n        copyFromFlash           CopyProtocol\n                                CopyServerAddress\n                                CopySourceName\n                                CopyDestinationName (opt)\n                                CopyRemoteUserName (opt)\n                                CopyNotifyOnCompletion (opt)\n        copyFromFlhLog          CopyProtocol\n                                CopyServerAddress\n                                CopyDestinationName\n                                CopyNotifyOnCompletion (opt)"
  },
  "ciscoFlashCopyProtocol": {
    "name": "ciscoFlashCopyProtocol",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tftp": 1,
          "rcp": 2,
          "lex": 3,
          "ftp": 4,
          "scp": 5,
          "sftp": 6
        }
      }
    },
    "default": {
      "default": {
        "value": "tftp",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The protocol to be used for any copy. Optional.\n        Will default to tftp if not specified.\n\n        Since feature support depends on a software release,\n        version number within the release, platform, and\n        maybe the image type (subset type), a management\n        station would be expected to somehow determine\n        the protocol support for a command."
  },
  "ciscoFlashCopyServerAddress": {
    "name": "ciscoFlashCopyServerAddress",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "FFFFFFFF",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "deprecated",
    "description": "The server address to be used for any copy. Optional.\n        Will default to 'FFFFFFFF'H  (or 255.255.255.255).\n\n        Since this object can just hold only IPv4 Transport\n        type, it is deprecated and replaced by\n        ciscoFlashCopyServerAddrRev1."
  },
  "ciscoFlashCopySourceName": {
    "name": "ciscoFlashCopySourceName",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Source file name, either in Flash or on a server,\n        depending on the type of copy command. Mandatory.\n\n        For a copy from Flash:\n        File name must be of the form\n                [device>:][:]\n        where  is a value obtained from FlashDeviceName,\n                 is obtained from FlashPartitionName\n            and  is the name of a file in Flash.\n        A management station could derive its own partition name\n        as per the description for the ciscoFlashPartitionName\n        object.\n        If <device> is not specified, the default Flash device\n        will be assumed.\n        If <partition> is not specified, the default partition\n        will be assumed. If a device is not partitioned into 2\n        or more partitions, this value may be left out.\n\n        For a copy to Flash, the file name will be as per\n        the file naming conventions and path to the file on\n        the server."
  },
  "ciscoFlashCopyDestinationName": {
    "name": "ciscoFlashCopyDestinationName",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Destination file name.\n\n        For a copy to Flash:\n        File name must be of the form\n                {device>:][<partition>:]<file>\n        where <device> is a value obtained from FlashDeviceName,\n              <partition> is obtained from FlashPartitionName\n          and <file> is any character string that does not have\n        embedded colon characters.\n        A management station could derive its own partition name\n        as per the description for the ciscoFlashPartitionName\n        object.\n        If <device> is not specified, the default Flash device\n        will be assumed.\n        If <partition> is not specified, the default partition\n        will be assumed. If a device is not partitioned into 2\n        or more partitions, this value may be left out.\n        If <file> is not specified, it will default to <file>\n        specified in ciscoFlashCopySourceName.\n\n        For a copy from Flash via tftp or rcp, the file name will be\n        as per the file naming conventions and destination sub-directory\n        on the server. If not specified, <file> from the source\n        file name will be used.\n        For a copy from Flash via lex, this string will consist\n        of numeric characters specifying the interface on the\n        lex box that will receive the source flash image."
  },
  "ciscoFlashCopyRemoteUserName": {
    "name": "ciscoFlashCopyRemoteUserName",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Remote user name for copy via rcp protocol. Optional.\n        This object will be ignored for protocols other than\n        rcp.\n        If specified, it will override the remote user-name\n        configured through the\n                rcmd remote-username\n        configuration command.\n        The remote user-name is sent as the server user-name\n        in an rcp command request sent by the system to a\n        remote rcp server."
  },
  "ciscoFlashCopyStatus": {
    "name": "ciscoFlashCopyStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "copyOperationPending": 0,
          "copyInProgress": 1,
          "copyOperationSuccess": 2,
          "copyInvalidOperation": 3,
          "copyInvalidProtocol": 4,
          "copyInvalidSourceName": 5,
          "copyInvalidDestName": 6,
          "copyInvalidServerAddress": 7,
          "copyDeviceBusy": 8,
          "copyDeviceOpenError": 9,
          "copyDeviceError": 10,
          "copyDeviceNotProgrammable": 11,
          "copyDeviceFull": 12,
          "copyFileOpenError": 13,
          "copyFileTransferError": 14,
          "copyFileChecksumError": 15,
          "copyNoMemory": 16,
          "copyUnknownFailure": 17,
          "copyInvalidSignature": 18,
          "copyProhibited": 19
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The status of the specified copy operation.\n\n        copyOperationPending :\n                operation request is received and\n                pending for validation and process\n\n        copyInProgress :\n                specified operation is active\n\n        copyOperationSuccess :\n                specified operation is supported and\n                completed successfully\n\n        copyInvalidOperation :\n                command invalid or command-protocol-device\n                combination unsupported\n\n        copyInvalidProtocol :\n                invalid protocol specified\n\n        copyInvalidSourceName :\n                invalid source file name specified\n                For the  copy from flash to lex operation, this\n                error code will be returned when the source file\n                is not a valid lex image.\n\n        copyInvalidDestName :\n                invalid target name (file or partition or\n                device name) specified\n                For the  copy from flash to lex operation, this\n                error code will be returned when no lex devices\n                are connected to the router or when an invalid\n                lex interface number has been specified in\n                the destination string.\n\n        copyInvalidServerAddress :\n                invalid server address specified\n\n        copyDeviceBusy :\n                specified device is in use and locked by\n                another process\n\n        copyDeviceOpenError :\n                invalid device name\n\n        copyDeviceError :\n                device read, write or erase error\n\n        copyDeviceNotProgrammable :\n                device is read-only but a write or erase\n                operation was specified\n\n        copyDeviceFull :\n                device is filled to capacity\n\n        copyFileOpenError :\n                invalid file name; file not found in partition\n\n        copyFileTransferError :\n                file transfer was unsuccessfull; network failure\n\n        copyFileChecksumError :\n                file checksum in Flash failed\n\n        copyNoMemory :\n                system running low on memory\n\n        copyUnknownFailure :\n                failure unknown\n\n        copyProhibited:\n              stop user from overwriting current boot image file."
  },
  "ciscoFlashCopyNotifyOnCompletion": {
    "name": "ciscoFlashCopyNotifyOnCompletion",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies whether or not a notification should be\n        generated on the completion of the copy operation.\n        If specified, ciscoFlashCopyCompletionTrap\n        will be generated. It is the responsibility of the\n        management entity to ensure that the SNMP administrative\n        model is configured in such a way as to allow the\n        notification to be delivered."
  },
  "ciscoFlashCopyTime": {
    "name": "ciscoFlashCopyTime",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time taken for the copy operation. This object will\n        be like a stopwatch, starting when the operation\n        starts, stopping when the operation completes.\n        If a management entity keeps a database of completion\n        times for various operations, it can then use the\n        stopwatch capability to display percentage completion\n        time."
  },
  "ciscoFlashCopyEntryStatus": {
    "name": "ciscoFlashCopyEntryStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this table entry."
  },
  "ciscoFlashCopyVerify": {
    "name": "ciscoFlashCopyVerify",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies whether the file that is copied need to\n        be verified for integrity / authenticity, after\n        copy succeeds. If it is set to true, and if the\n        file that is copied doesn't have integrity /authenticity\n        attachement, or the integrity / authenticity check\n        fails, then the command will be aborted, and the file\n        that is copied will be deleted from the destination\n        file system."
  },
  "ciscoFlashCopyServerAddrType": {
    "name": "ciscoFlashCopyServerAddrType",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the transport type of the\n        address contained in\n        ciscoFlashCopyServerAddrRev1. Optional.\n        Will default to '1' (IPv4 address type)."
  },
  "ciscoFlashCopyServerAddrRev1": {
    "name": "ciscoFlashCopyServerAddrRev1",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "FFFFFFFF",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The server address to be used for any copy. Optional.\n        Will default to 'FFFFFFFF'H  (or 255.255.255.255).\n\n        The Format of this address depends on the value of the\n        ciscoFlashCopyServerAddrType.\n\n        This object deprecates the old\n        ciscoFlashCopyServerAddress object."
  },
  "ciscoFlashCopyRemotePassword": {
    "name": "ciscoFlashCopyRemotePassword",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Password used by ftp, sftp or scp for copying a file\n        to/from an ftp/sftp/scp server. This object must be\n        created when the ciscoFlashCopyProtocol is ftp, sftp or\n        scp. Reading it returns a zero-length string for\n        security reasons."
  },
  "ciscoFlashPartitioningTable": {
    "name": "ciscoFlashPartitioningTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of Flash partitioning operation entries. Each\n        entry represents a Flash partitioning operation that\n        has been initiated."
  },
  "ciscoFlashPartitioningEntry": {
    "name": "ciscoFlashPartitioningEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningSerialNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A Flash partitioning operation entry. Each entry\n        consists of the command, the target device, the\n        partition count, and optionally the partition sizes.\n\n        A management station wishing to create an entry should\n        first generate a pseudo-random serial number to be used\n        as the index to this sparse table.  The station should\n        then create the associated instance of the row status\n        object. It must also, either in the same or in successive\n        PDUs, create the associated instance of the command and\n        parameter objects. It should also modify the default values\n        for any of the parameter objects if the defaults are not\n        appropriate.\n\n        Once the appropriate instances of all the command\n        objects have been created, either by an explicit SNMP\n        set request or by default, the row status should be set\n        to active to initiate the operation. Note that this entire\n        procedure may be initiated via a single set request which\n        specifies a row status of createAndGo as well as specifies\n        valid values for the non-defaulted parameter objects.\n\n        Once an operation has been activated, it cannot be\n        stopped.\n\n        Once the operation completes, the management station should\n        retrieve the value of the status object (and time if\n        desired), and delete the entry.  In order to prevent old\n        entries from clogging the table, entries will be aged out,\n        but an entry will never be deleted within 5 minutes of\n        completing."
  },
  "ciscoFlashPartitioningSerialNumber": {
    "name": "ciscoFlashPartitioningSerialNumber",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Object which specifies a unique entry in the partitioning\n        operations table. A management station wishing to initiate\n        a partitioning operation should use a pseudo-random value\n        for this object when creating or modifying an instance of\n        a ciscoFlashPartitioningEntry."
  },
  "ciscoFlashPartitioningCommand": {
    "name": "ciscoFlashPartitioningCommand",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "partition": 1
        }
      }
    },
    "default": {
      "default": {
        "value": "partition",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The partitioning command to be executed. Mandatory.\n        If the command is unsupported, the\n        partitioningInvalidOperation\n        error will be reported in the operation status.\n\n        Command                 Remarks\n        partition               Partition a Flash device.\n                                All the prerequisites for\n                                partitioning must be met for\n                                this command to succeed.\n\n        Command table           Parameters\n        1) partition            PartitioningDestinationName\n                                PartitioningPartitionCount\n                                PartitioningPartitionSizes (opt)\n                                PartitioningNotifyOnCompletion (opt)"
  },
  "ciscoFlashPartitioningDestinationName": {
    "name": "ciscoFlashPartitioningDestinationName",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Destination device name. This name will be the value\n        obtained from FlashDeviceName.\n        If the name is not specified, the default Flash device\n        will be assumed."
  },
  "ciscoFlashPartitioningPartitionCount": {
    "name": "ciscoFlashPartitioningPartitionCount",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 2,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to specify the number of\n        partitions to be created. Its value cannot exceed\n        the value of ciscoFlashDeviceMaxPartitions.\n\n        To undo partitioning (revert to a single partition),\n        this object must have the value 1."
  },
  "ciscoFlashPartitioningPartitionSizes": {
    "name": "ciscoFlashPartitioningPartitionSizes",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to explicitly specify the size\n        of each partition to be created.\n        The size of each partition will be in units of\n        ciscoFlashDeviceMinPartitionSize.\n        The value of this object will be in the form:\n                <part1>:<part2>...:<partn>\n\n        If partition sizes are not specified, the system\n        will calculate default sizes based on the partition\n        count, the minimum partition size, and the device\n        size. Partition size need not be specified when\n        undoing partitioning (partition count is 1).\n        If partition sizes are specified, the number of\n        sizes specified must exactly match the partition\n        count. If not, the partitioning command will be\n        rejected with the invalidPartitionSizes error ."
  },
  "ciscoFlashPartitioningStatus": {
    "name": "ciscoFlashPartitioningStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "partitioningInProgress": 1,
          "partitioningOperationSuccess": 2,
          "partitioningInvalidOperation": 3,
          "partitioningInvalidDestName": 4,
          "partitioningInvalidPartitionCount": 5,
          "partitioningInvalidPartitionSizes": 6,
          "partitioningDeviceBusy": 7,
          "partitioningDeviceOpenError": 8,
          "partitioningDeviceError": 9,
          "partitioningNoMemory": 10,
          "partitioningUnknownFailure": 11
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The status of the specified partitioning operation.\n        partitioningInProgress :\n                specified operation is active\n\n        partitioningOperationSuccess :\n                specified operation is supported and completed\n                successfully\n\n        partitioningInvalidOperation :\n                command invalid or command-protocol-device\n                combination unsupported\n\n        partitioningInvalidDestName :\n                invalid target name (file or partition or\n                device name) specified\n\n        partitioningInvalidPartitionCount :\n                invalid partition count specified for the\n                partitioning command\n\n        partitioningInvalidPartitionSizes :\n                invalid partition size, or invalid count of\n                partition sizes\n\n        partitioningDeviceBusy :\n                specified device is in use and locked by\n                another process\n\n        partitioningDeviceOpenError :\n                invalid device name\n\n        partitioningDeviceError :\n                device read, write or erase error\n\n        partitioningNoMemory :\n                system running low on memory\n\n        partitioningUnknownFailure :\n                failure unknown"
  },
  "ciscoFlashPartitioningNotifyOnCompletion": {
    "name": "ciscoFlashPartitioningNotifyOnCompletion",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies whether or not a notification should be\n        generated on the completion of the partitioning operation.\n        If specified, ciscoFlashPartitioningCompletionTrap\n        will be generated. It is the responsibility of the\n        management entity to ensure that the SNMP administrative\n        model is configured in such a way as to allow the\n        notification to be delivered."
  },
  "ciscoFlashPartitioningTime": {
    "name": "ciscoFlashPartitioningTime",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time taken for the operation. This object will\n        be like a stopwatch, starting when the operation\n        starts, stopping when the operation completes.\n        If a management entity keeps a database of completion\n        times for various operations, it can then use the\n        stopwatch capability to display percentage completion\n        time."
  },
  "ciscoFlashPartitioningEntryStatus": {
    "name": "ciscoFlashPartitioningEntryStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this table entry."
  },
  "ciscoFlashMiscOpTable": {
    "name": "ciscoFlashMiscOpTable",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of misc Flash operation entries. Each\n        entry represents a Flash operation that\n        has been initiated."
  },
  "ciscoFlashMiscOpEntry": {
    "name": "ciscoFlashMiscOpEntry",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpSerialNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A Flash operation entry. Each entry consists of a\n        command, a target, and any optional parameters.\n\n        A management station wishing to create an entry should\n        first generate a pseudo-random serial number to be used\n        as the index to this sparse table.  The station should\n        then create the associated instance of the row status\n        object. It must also, either in the same or in successive\n        PDUs, create the associated instance of the command and\n        parameter objects. It should also modify the default values\n        for any of the parameter objects if the defaults are not\n        appropriate.\n\n        Once the appropriate instances of all the command\n        objects have been created, either by an explicit SNMP\n        set request or by default, the row status should be set\n        to active to initiate the operation. Note that this entire\n        procedure may be initiated via a single set request which\n        specifies a row status of createAndGo as well as specifies\n        valid values for the non-defaulted parameter objects.\n\n        Once an operation has been activated, it cannot be\n        stopped.\n\n        Once the operation completes, the management station should\n        retrieve the value of the status object (and time if\n        desired), and delete the entry.  In order to prevent old\n        entries from clogging the table, entries will be aged out,\n        but an entry will never be deleted within 5 minutes of\n        completing."
  },
  "ciscoFlashMiscOpSerialNumber": {
    "name": "ciscoFlashMiscOpSerialNumber",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Object which specifies a unique entry in the\n        table. A management station wishing to initiate a\n        flash operation should use a pseudo-random value for\n        this object when creating or modifying an instance of\n        a ciscoFlashMiscOpEntry."
  },
  "ciscoFlashMiscOpCommand": {
    "name": "ciscoFlashMiscOpCommand",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "erase": 1,
          "verify": 2,
          "delete": 3,
          "undelete": 4,
          "squeeze": 5,
          "format": 6
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The command to be executed. Mandatory.\n        Note that it is possible for a system to support\n        multiple file systems (different file systems on\n        different Flash devices, or different file systems\n        on different partitions within a device). Each such\n        file system may support only a subset of these commands.\n        If a command is unsupported, the miscOpInvalidOperation(3)\n        error will be reported in the operation status.\n\n        Command         Remarks\n        erase           Erase flash.\n        verify          Verify flash file checksum.\n        delete          Delete a file.\n        undelete        Revive a deleted file .\n                        Note that there are limits on\n                        the number of times a file can\n                        be deleted and undeleted. When\n                        this limit is exceeded, the\n                        system will return the appropriate\n                        error.\n        squeeze         Recover space occupied by\n                        deleted files. This command\n                        preserves the good files, erases\n                        out the file system, then restores\n                        the preserved good files.\n        format          Format a flash device.\n\n        Command table   Parameters\n        erase           MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)\n        verify          MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)\n        delete          MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)\n        undelete        MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)\n        squeeze         MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)\n        format          MiscOpDestinationName\n                        MiscOpNotifyOnCompletion (opt)"
  },
  "ciscoFlashMiscOpDestinationName": {
    "name": "ciscoFlashMiscOpDestinationName",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Destination file, or partition name.\n        File name must be of the form\n                [device>:][<partition>:]<file>\n        where <device> is a value obtained from FlashDeviceName,\n              <partition> is obtained from FlashPartitionName\n          and <file> is the name of a file in Flash.\n        While leading and/or trailing whitespaces are acceptable,\n        no whitespaces are allowed within the path itself.\n\n        A management station could derive its own partition name\n        as per the description for the ciscoFlashPartitionName\n        object.\n        If <device> is not specified, the default Flash device\n        will be assumed.\n        If <partition> is not specified, the default partition\n        will be assumed. If a device is not partitioned into 2\n        or more partitions, this value may be left out.\n\n        For an operation on a partition, eg., the erase\n        command, this object would specify the partition name\n        in the form:\n                [device>:][<partition>:]"
  },
  "ciscoFlashMiscOpStatus": {
    "name": "ciscoFlashMiscOpStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "miscOpInProgress": 1,
          "miscOpOperationSuccess": 2,
          "miscOpInvalidOperation": 3,
          "miscOpInvalidDestName": 4,
          "miscOpDeviceBusy": 5,
          "miscOpDeviceOpenError": 6,
          "miscOpDeviceError": 7,
          "miscOpDeviceNotProgrammable": 8,
          "miscOpFileOpenError": 9,
          "miscOpFileDeleteFailure": 10,
          "miscOpFileUndeleteFailure": 11,
          "miscOpFileChecksumError": 12,
          "miscOpNoMemory": 13,
          "miscOpUnknownFailure": 14,
          "miscOpSqueezeFailure": 18,
          "miscOpNoSuchFile": 19,
          "miscOpFormatFailure": 20
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The status of the specified operation.\n        miscOpInProgress :\n                specified operation is active\n\n        miscOpOperationSuccess :\n                specified operation is supported and completed\n                successfully\n\n        miscOpInvalidOperation :\n                command invalid or command-protocol-device\n                combination unsupported\n\n        miscOpInvalidDestName :\n                invalid target name (file or partition or\n                device name) specified\n\n        miscOpDeviceBusy :\n                specified device is in use and locked by another\n                process\n\n        miscOpDeviceOpenError :\n                invalid device name\n\n        miscOpDeviceError :\n                device read, write or erase error\n\n        miscOpDeviceNotProgrammable :\n                device is read-only but a write or erase\n                operation was specified\n\n        miscOpFileOpenError :\n                invalid file name; file not found in partition\n\n        miscOpFileDeleteFailure :\n                file could not be deleted; delete count exceeded\n\n        miscOpFileUndeleteFailure :\n                file could not be undeleted; undelete count\n                exceeded\n\n        miscOpFileChecksumError :\n                file has a bad checksum\n\n        miscOpNoMemory :\n                system running low on memory\n\n        miscOpUnknownFailure :\n                failure unknown\n\n        miscOpSqueezeFailure :\n                the squeeze operation failed\n\n        miscOpNoSuchFile :\n                a valid but nonexistent file name was specified\n\n        miscOpFormatFailure :\n                the format operation failed"
  },
  "ciscoFlashMiscOpNotifyOnCompletion": {
    "name": "ciscoFlashMiscOpNotifyOnCompletion",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies whether or not a notification should be\n        generated on the completion of an operation.\n        If specified, ciscoFlashMiscOpCompletionTrap\n        will be generated. It is the responsibility of the\n        management entity to ensure that the SNMP administrative\n        model is configured in such a way as to allow the\n        notification to be delivered."
  },
  "ciscoFlashMiscOpTime": {
    "name": "ciscoFlashMiscOpTime",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time taken for the operation. This object will\n        be like a stopwatch, starting when the operation\n        starts, stopping when the operation completes.\n        If a management entity keeps a database of completion\n        times for various operations, it can then use the\n        stopwatch capability to display percentage completion\n        time."
  },
  "ciscoFlashMiscOpEntryStatus": {
    "name": "ciscoFlashMiscOpEntryStatus",
    "oid": "1.3.6.1.4.1.9.9.10.1.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this table entry."
  },
  "ciscoFlashCfgDevInsNotifEnable": {
    "name": "ciscoFlashCfgDevInsNotifEnable",
    "oid": "1.3.6.1.4.1.9.9.10.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Specifies whether or not a notification should be\n        generated on the insertion of a Flash device.\n\n        If the value of this object is 'true' then the\n        ciscoFlashDeviceInsertedNotif notification\n        will be generated.\n\n        If the value of this object is 'false' then the\n        ciscoFlashDeviceInsertedNotif notification\n        will not be generated.\n\n        It is the responsibility of the management entity to\n        ensure that the SNMP administrative model is\n        configured in such a way as to allow the\n        notification to be delivered."
  },
  "ciscoFlashCfgDevRemNotifEnable": {
    "name": "ciscoFlashCfgDevRemNotifEnable",
    "oid": "1.3.6.1.4.1.9.9.10.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Specifies whether or not a notification should be\n        generated on the removal of a Flash device.\n\n        If the value of this object is 'true' then the\n        ciscoFlashDeviceRemovedNotif notification\n        will be generated.\n\n        If the value of this object is 'false' then the\n        ciscoFlashDeviceRemovedNotif notification\n        will not be generated.\n\n        It is the responsibility of the management entity to\n        ensure that the SNMP administrative model is\n        configured in such a way as to allow the\n        notification to be delivered."
  },
  "ciscoFlashPartitionLowSpaceNotifEnable": {
    "name": "ciscoFlashPartitionLowSpaceNotifEnable",
    "oid": "1.3.6.1.4.1.9.9.10.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object specifies whether or not a notification should be\n        generated when the free space falls below the threshold value on\n        a flash partition and on recovery from low space.\n\n        If the value of this object is 'true' then\n        ciscoFlashPartitionLowSpaceNotif and\n        ciscoFlashPartitionLowSpaceRecoveryNotif notifications will be\n        generated.\n\n        If the value of this object is 'false' then the\n        ciscoFlashPartitionLowSpaceNotif  and\n        ciscoFlashPartitionLowSpaceRecoveryNotif notifications\n        will not be generated.\n\n        It is the responsibility of the management entity to\n        ensure that the SNMP administrative model is\n        configured in such a way as to allow the\n        notifications to be delivered."
  },
  "ciscoFlashMIBTraps": {
    "name": "ciscoFlashMIBTraps",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0",
    "class": "objectidentity"
  },
  "ciscoFlashCopyCompletionTrap": {
    "name": "ciscoFlashCopyCompletionTrap",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyStatus"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashCopyCompletionTrap is sent at the\n        completion of a flash copy operation if such a trap\n        was requested when the operation was initiated."
  },
  "ciscoFlashPartitioningCompletionTrap": {
    "name": "ciscoFlashPartitioningCompletionTrap",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningStatus"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashPartitioningCompletionTrap is sent at the\n        completion of a partitioning operation if such a trap\n        was requested when the operation was initiated."
  },
  "ciscoFlashMiscOpCompletionTrap": {
    "name": "ciscoFlashMiscOpCompletionTrap",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpStatus"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashMiscOpCompletionTrap is sent at the\n        completion of a miscellaneous flash operation\n        (enumerated in ciscoFlashMiscOpCommand) if such a trap\n        was requested when the operation was initiated."
  },
  "ciscoFlashDeviceChangeTrap": {
    "name": "ciscoFlashDeviceChangeTrap",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceName"
      }
    ],
    "status": "deprecated",
    "description": "A ciscoFlashDeviceChangeTrap is sent whenever a\n        removable Flash device is inserted or removed."
  },
  "ciscoFlashDeviceInsertedNotif": {
    "name": "ciscoFlashDeviceInsertedNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceName"
      }
    ],
    "status": "deprecated",
    "description": "A ciscoFlashDeviceInsertedNotif notification is sent\n        whenever a removable Flash device is inserted."
  },
  "ciscoFlashDeviceRemovedNotif": {
    "name": "ciscoFlashDeviceRemovedNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.6",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceName"
      }
    ],
    "status": "deprecated",
    "description": "A ciscoFlashDeviceRemovedNotif notification is sent\n        whenever a removable Flash device is removed."
  },
  "ciscoFlashDeviceInsertedNotifRev1": {
    "name": "ciscoFlashDeviceInsertedNotifRev1",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.7",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashDeviceInsertedNotif notification is sent\n        whenever a removable Flash device is inserted\n\n        ciscoFlashDeviceInsertedNotifRev1 depcrecates\n        ciscoFlashDeviceInsertedNotif since it uses\n        ciscoFlashDeviceName as a varbind which is\n        deprecated"
  },
  "ciscoFlashDeviceRemovedNotifRev1": {
    "name": "ciscoFlashDeviceRemovedNotifRev1",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashDeviceRemovedNotif notification is sent\n        whenever a removable Flash device is removed.\n\n        ciscoFlashDeviceRemovedNotifRev1 depcrecates\n        ciscoFlashDeviceRemovedNotif since it uses\n        ciscoFlashDeviceName as a varbind which is\n        deprecated"
  },
  "ciscoFlashPartitionLowSpaceNotif": {
    "name": "ciscoFlashPartitionLowSpaceNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.9",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFreeSpaceExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceNotifThreshold"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashPartitionLowSpaceNotif notification is sent\n        when the percentage of free space in a flash partition falls\n        below ciscoFlashPartitionLowSpaceNotifThreshold.This\n        notification will be generated when the value of\n        ciscoFlashPartitionLowSpaceNotifEnable is\n        true.\n\n        ciscoFlashPartitionName indicates the name of the flash\n        partition for which this notification has been sent.\n\n        ciscoFlashPartitionFreeSpaceExtended indicates the free space\n        available with in the flash partition.\n\n        ciscoFlashPartitionLowSpaceNotifThreshold indicates the minimum\n        threshold value in percentage of free space for each partition."
  },
  "ciscoFlashPartitionLowSpaceRecoveryNotif": {
    "name": "ciscoFlashPartitionLowSpaceRecoveryNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.10",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFreeSpaceExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceNotifThreshold"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashPartitionLowSpaceRecoveryNotif notification is sent\n        whenever the free space in a flash partition becomes\n        normal once it has gone low. This notification will be\n        generated\n        when the value of ciscoFlashPartitionLowSpaceNotifEnable is\n        true. This trap is generated as a recovery notification for\n        ciscoFlashPartitionLowSpaceNotif.\n\n        ciscoFlashPartitionName indicates the name of the flash\n        partition for which this notification has been sent.\n\n        ciscoFlashPartitionFreeSpaceExtended indicates the free space\n        available with in the flash partition.\n\n        ciscoFlashPartitionLowSpaceNotifThreshold indicates the minimum\n        threshold value in percentage of free space for each partition."
  },
  "ciscoFlashDeviceChangeExtTrap": {
    "name": "ciscoFlashDeviceChangeExtTrap",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.11",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSizeExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashDeviceChangeExtTrap is sent whenever a\n        removable Flash device is inserted or removed."
  },
  "ciscoFlashDeviceInsertedExtNotif": {
    "name": "ciscoFlashDeviceInsertedExtNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.12",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSizeExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashDeviceInsertedExtNotif notification is sent\n        whenever a removable Flash device is inserted."
  },
  "ciscoFlashDeviceRemovedExtNotif": {
    "name": "ciscoFlashDeviceRemovedExtNotif",
    "oid": "1.3.6.1.4.1.9.9.10.1.3.0.13",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSizeExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      }
    ],
    "status": "current",
    "description": "A ciscoFlashDeviceRemovedExtNotif notification is sent\n        whenever a removable Flash device removed."
  },
  "ciscoFlashMIBConformance": {
    "name": "ciscoFlashMIBConformance",
    "oid": "1.3.6.1.4.1.9.9.10.2",
    "class": "objectidentity"
  },
  "ciscoFlashMIBCompliances": {
    "name": "ciscoFlashMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.10.2.1",
    "class": "objectidentity"
  },
  "ciscoFlashMIBGroups": {
    "name": "ciscoFlashMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.10.2.2",
    "class": "objectidentity"
  },
  "ciscoFlashMIBCompliance": {
    "name": "ciscoFlashMIBCompliance",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB."
  },
  "ciscoFlashMIBComplianceRev1": {
    "name": "ciscoFlashMIBComplianceRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev2."
  },
  "ciscoFlashMIBComplianceRev2": {
    "name": "ciscoFlashMIBComplianceRev2",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.3",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroup",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev3."
  },
  "ciscoFlashMIBComplianceRev3": {
    "name": "ciscoFlashMIBComplianceRev3",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.4",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev1",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev4."
  },
  "ciscoFlashMIBComplianceRev4": {
    "name": "ciscoFlashMIBComplianceRev4",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.5",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev1",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev5."
  },
  "ciscoFlashMIBComplianceRev5": {
    "name": "ciscoFlashMIBComplianceRev5",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.6",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev1",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev6."
  },
  "ciscoFlashMIBComplianceRev6": {
    "name": "ciscoFlashMIBComplianceRev6",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.7",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev2",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev7."
  },
  "ciscoFlashMIBComplianceRev7": {
    "name": "ciscoFlashMIBComplianceRev7",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.8",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupSupp1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev2",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev8."
  },
  "ciscoFlashMIBComplianceRev8": {
    "name": "ciscoFlashMIBComplianceRev8",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.9",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupSupp1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileTypeInfoGroup",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev9."
  },
  "ciscoFlashMIBComplianceRev9": {
    "name": "ciscoFlashMIBComplianceRev9",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.10",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupSupp1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileTypeInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that support\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev10."
  },
  "ciscoFlashMIBComplianceRev10": {
    "name": "ciscoFlashMIBComplianceRev10",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.11",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashPartitionInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupSupp1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileTypeInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoExtGroupSupRev1",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for entities that supports\n        the Cisco Flash MIB.\n\n        This compliance is deprecated by\n        ciscoFlashMIBComplianceRev11."
  },
  "ciscoFlashMIBComplianceRev11": {
    "name": "ciscoFlashMIBComplianceRev11",
    "oid": "1.3.6.1.4.1.9.9.10.2.1.12",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoFlashPartitionInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileInfoGroupSupp1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashChipInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashCopyOpGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceOptionalInfoGroupRev1",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitioningOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashMiscOpGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashNotifGroupRev3",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashFileTypeInfoGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoGroupRev2",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashPartitionInfoExtGroup",
        "module": "CISCO-FLASH-MIB"
      },
      {
        "object": "ciscoFlashDeviceInfoExtGroupSupRev1",
        "module": "CISCO-FLASH-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for entities that supports\n        the Cisco Flash MIB."
  },
  "ciscoFlashDeviceInfoGroup": {
    "name": "ciscoFlashDeviceInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDevicesSupported"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceDescr"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceProgrammingJumper"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInitTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceChipCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovable"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing mandatory Flash\n        device level information."
  },
  "ciscoFlashDeviceOptionalInfoGroup": {
    "name": "ciscoFlashDeviceOptionalInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMaxPartitions"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDevicePartitions"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceController"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceCard"
      }
    ],
    "status": "deprecated",
    "description": "A collection of optional objects providing\n        Flash device level information."
  },
  "ciscoFlashChipInfoGroup": {
    "name": "ciscoFlashChipInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipCode"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipDescr"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipWriteRetries"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipEraseRetries"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipMaxWriteRetries"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashChipMaxEraseRetries"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing Flash\n        chip level information."
  },
  "ciscoFlashPartitionInfoGroup": {
    "name": "ciscoFlashPartitionInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionStartChip"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionEndChip"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFreeSpace"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFileCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionChecksumAlgorithm"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionUpgradeMethod"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionNeedErasure"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFileNameLength"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing Flash\n        partition level information. Where a Flash\n        device has not been partitioned or does\n        not support partitioning, a partition is\n        synonymous with the entire device."
  },
  "ciscoFlashFileInfoGroup": {
    "name": "ciscoFlashFileInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileChecksum"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileName"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing Flash\n        file level information."
  },
  "ciscoFlashCopyOpGroup": {
    "name": "ciscoFlashCopyOpGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCommand"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyProtocol"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyServerAddress"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopySourceName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyDestinationName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyRemoteUserName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyNotifyOnCompletion"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyEntryStatus"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing the ability\n        to copy files to and from a Flash partition."
  },
  "ciscoFlashPartitioningOpGroup": {
    "name": "ciscoFlashPartitioningOpGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningCommand"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningDestinationName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningPartitionCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningPartitionSizes"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningNotifyOnCompletion"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningEntryStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability\n        to partition a Flash device."
  },
  "ciscoFlashMiscOpGroup": {
    "name": "ciscoFlashMiscOpGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpCommand"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpDestinationName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpNotifyOnCompletion"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpEntryStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability\n        to perform misc operations (erase, file verification,\n        etc) in a Flash device."
  },
  "ciscoFlashNotifGroup": {
    "name": "ciscoFlashNotifGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.9",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceChangeTrap"
      }
    ],
    "status": "deprecated",
    "description": "The set of notification defined by this MIB."
  },
  "ciscoFlashFileInfoGroupRev1": {
    "name": "ciscoFlashFileInfoGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileChecksum"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileType"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing Flash\n        file level information."
  },
  "ciscoFlashNotifGroupRev1": {
    "name": "ciscoFlashNotifGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.11",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInsertedNotif"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovedNotif"
      }
    ],
    "status": "deprecated",
    "description": "The set of notification defined by this MIB."
  },
  "ciscoFlashDeviceInfoGroupRev1": {
    "name": "ciscoFlashDeviceInfoGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDevicesSupported"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceDescr"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceProgrammingJumper"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInitTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceChipCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovable"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCfgDevInsNotifEnable"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCfgDevRemNotifEnable"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing mandatory Flash\n        device level information."
  },
  "ciscoFlashDeviceOptionalInfoGroupRev1": {
    "name": "ciscoFlashDeviceOptionalInfoGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMaxPartitions"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDevicePartitions"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceController"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPhyEntIndex"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects providing\n        Flash device level information. This deprecates\n        ciscoFlashDeviceOptionalInfoGroup object group."
  },
  "ciscoFlashCopyOpGroupRev1": {
    "name": "ciscoFlashCopyOpGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.14",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCommand"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyProtocol"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyServerAddress"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopySourceName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyDestinationName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyRemoteUserName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyNotifyOnCompletion"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyEntryStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyVerify"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects providing the ability\n        to copy files to and from a Flash partition.\n\n        This group is deprecated by new group\n        ciscoFlashCopyOpGroupRev2."
  },
  "ciscoFlashDeviceInfoGroupRev2": {
    "name": "ciscoFlashDeviceInfoGroupRev2",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.15",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDevicesSupported"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceNameExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceDescr"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceProgrammingJumper"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInitTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceChipCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovable"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCfgDevInsNotifEnable"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCfgDevRemNotifEnable"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing mandatory Flash\n        device level information."
  },
  "ciscoFlashCopyOpGroupRev2": {
    "name": "ciscoFlashCopyOpGroupRev2",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.16",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCommand"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyProtocol"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopySourceName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyDestinationName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyRemoteUserName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyNotifyOnCompletion"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyTime"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyEntryStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyVerify"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyServerAddrType"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyServerAddrRev1"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability\n        to copy files to and from a Flash partition.\n\n        This Group deprecates ciscoFlashCopyOpGroupRev1."
  },
  "ciscoFlashNotifGroupRev2": {
    "name": "ciscoFlashNotifGroupRev2",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.17",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInsertedNotifRev1"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovedNotifRev1"
      }
    ],
    "status": "deprecated",
    "description": "The set of notification defined by this MIB.\n        ciscoFlashNotifGroupRev2 object is superseded by ciscoFlashNotifGroupRev3."
  },
  "ciscoFlashCopyOpGroupRev3": {
    "name": "ciscoFlashCopyOpGroupRev3",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.18",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyRemotePassword"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability\n        to copy files to and from a Flash partition.\n\n        This Group supplements ciscoFlashCopyOpGroupRev2."
  },
  "ciscoFlashFileInfoGroupSupp1": {
    "name": "ciscoFlashFileInfoGroupSupp1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.19",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileDate"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing Flash\n        file level information in addition to the\n        objects found in ciscoFlashFileInfoGroupRev1."
  },
  "ciscoFlashFileTypeInfoGroup": {
    "name": "ciscoFlashFileTypeInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.20",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileByTypeSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileByTypeChecksum"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileByTypeStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileByTypeName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashFileByTypeDate"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing Flash\n        file information which are sorted by file type."
  },
  "ciscoFlashDeviceInfoExtGroup": {
    "name": "ciscoFlashDeviceInfoExtGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.21",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceSizeExtended"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing high capacity\n        mandatory Flash device level information."
  },
  "ciscoFlashPartitionInfoExtGroup": {
    "name": "ciscoFlashPartitionInfoExtGroup",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.22",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionSizeExtended"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFreeSpaceExtended"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing haigh capacity\n        Flash partition level information."
  },
  "ciscoFlashDeviceInfoExtGroupSupRev1": {
    "name": "ciscoFlashDeviceInfoExtGroupSupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.23",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceMinPartitionSizeExtended"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing high capacity\n        mandatory Flash device level information.\n\n        This Group is supplement to ciscoFlashDeviceInfoExtGroup."
  },
  "ciscoFlashPartitionInfoGroupRev1": {
    "name": "ciscoFlashPartitionInfoGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.24",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionStartChip"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionEndChip"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionSize"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFreeSpace"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFileCount"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionChecksumAlgorithm"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionStatus"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionUpgradeMethod"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionName"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionNeedErasure"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionFileNameLength"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceNotifThreshold"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceNotifEnable"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing Flash\n        partition level information. Where a Flash\n        device has not been partitioned or does\n        not support partitioning, a partition is\n        synonymous with the entire device."
  },
  "ciscoFlashNotifGroupRev3": {
    "name": "ciscoFlashNotifGroupRev3",
    "oid": "1.3.6.1.4.1.9.9.10.2.2.25",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashCopyCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitioningCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashMiscOpCompletionTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInsertedNotifRev1"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovedNotifRev1"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceNotif"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashPartitionLowSpaceRecoveryNotif"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceChangeExtTrap"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceInsertedExtNotif"
      },
      {
        "module": "CISCO-FLASH-MIB",
        "object": "ciscoFlashDeviceRemovedExtNotif"
      }
    ],
    "status": "current",
    "description": "The set of notification defined by this MIB."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///home/gabef/git/SNMP-MIB-Browser/MIBs/CISCO-FLASH-MIB.txt",
      "Produced by pysmi-0.3.4 at Thu Jul  7 00:00:46 2022",
      "On host gabe-k55vj platform Linux version 5.15.52-1-lts by user gabef",
      "Using Python version 3.10.5 (main, Jun  6 2022, 18:49:26) [GCC 12.1.0]"
    ],
    "module": "CISCO-FLASH-MIB"
  }
}